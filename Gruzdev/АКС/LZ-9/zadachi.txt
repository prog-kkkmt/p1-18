Задание 1.
В этой задаче вам необходимо написать простую программу на ассемблере,
 которая выводит приветствие на экран. Для этого вам понадобится вызвать
 функцию puts и передать ей через стек строку с именем hello.

push $hello	// кладём "hello" на стек
call puts	// вызов функции puts
add $4, %esp	// удаление верхних 4 байт со стека


Задание 2.
В этой задаче вам потребуется написать ассемблерный код,
 который проверяет поместится ли сумма двух заданных беззнаковых чисел
 в 32 битовый регистр. Числа поступают на вход в регистрах %eax и %edx.
 Если сумма чисел не поместится в 32 битный регистр запишите в регистр %eax
 значение 0, если сумма поместится в 32 битный регистр, то запишите 1.

add %eax, %edx		// Складываются значения регистров eax и ebx
    jc if_overflow	// если произошло беззнаковое переполнение переходим в if_overflow, в противном случае просто пропускается

    mov $1, %eax	// в eax записывается 1
    jmp return		// переход в функцию return

if_overflow:
    mov $0, %eax	// записывает в eax 0

return:

Задание 3.
В этом задании вы должны написать функцию возведения в степень.
 Функция принимает число в регистре %eax и показатель степени в регистре %edx,
 и возвращает результат в регистре %eax.

power:
    mov %eax, %ebx	// записываем значение регистра eax в ebx

    cmp $0, %edx	// Сравниевает счётчик(степень) с нулём {Проверка на 0 степень}
    test %edx, %edx	// если степень равна 0
    jz esli0		// то переходим в функцию esli0

    loop:		// Грубо говоря - цикл
    dec %edx		// уменьшение счётчика(степени)
    test %edx, %edx	// если счётчик равен 0
    jz posle		// переход на функцию  posle
    imul %ebx, %eax	// умножение
    jmp loop		// переход в функцию loop

    esli0:
        mov $1,%eax	// записывает 1 в регистр eax
    posle:
        ret