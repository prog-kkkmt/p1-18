//бинарный поиск
#include <stdio.h>
#define MAX 100000

int biSearch(int mas[MAX], int n){
	int l = 0,  r = n - 1;
	int a; 
    
	scanf("%d", &a);
    
    while(l <= r){          
         int m = (l + r) / 2;
        if (mas[m] == a){
            return m + 1;
        }
        else if (mas[m] > a){
            r = m - 1; 
        }
        else{
            l = m + 1; 
        }        
    }
    return -1;
}

int main() {
     int n, j;
     int mas[MAX];
    scanf("%d", &n);
    //Для корректной работы алгоритма массив должен быть отсортированный
    for(int i = 0; i < n; i++){
        scanf("%d", &mas[i]);
    }
    
    scanf("%d", &j);
    
    for(int i = 0; i < j; i++)
        printf("%d ", biSearch(mas, n));

    return 0;
}
Шаги алгоритма:
1) Определение значения элемента в середине структуры данных. Полученное значение сравнивается с ключом.
2) Если ключ меньше значения середины, то поиск осуществляется в первой половине элементов, иначе — во второй.
3) Поиск сводится к тому, что вновь определяется значение серединного элемента в выбранной половине и сравнивается с ключом.
4) Процесс продолжается до тех пор, пока не будет найден элемент со значением ключа или не станет пустым интервал для поиска.
