'''
Задание 3. https://stepik.org/lesson/243394/step/13?unit=215740
Телефонная книга. Этап 3. Коле очень понравилась Ваша программа, однако он стал 
замечать, что иногда в его телефонную книгу попадают номера в некорректном формате. 
Чтобы не сохранять недействительные номера, он попросил Вас обрабатывать только номера, 
соответствующие критериям:
- номер должен начинаться либо с +7, либо с 8 и состоять из 11 цифр.
- блоки цифр могут разделяться пробелами или дефисами.
- вторая, третья и четвертая цифры могут помещаться в скобки.
Если программа встречает некорректный номер, она должна его проигнорировать. В обратном 
случае она должна привести номер к виду +7 (900) 800-70-60 и запомнить. Остальной 
функционал программы остается без изменений.

Sample Input:
Ben 89001234050, +7 050 432 10-09
Alice 404-502, 894053212-65, 439-095
Nick +1(650)781 12-51
Ben
Alex +4(908)273-22-421, 8 (908) 273-22-42
Alice
Nick
Robert 51234047129, 89174043215
Alex
Robert
.

Sample Output:
+7 (900) 123-40-50, +7 (050) 432-10-09
+7 (940) 532-12-65
Не найдено
+7 (908) 273-22-42
+7 (917) 404-32-15
'''

def GPhone(number):
    for i in [" ", "-", "+", "(", ")"]:
        number = number.replace(i, '')
    if len(number) == 11 and (number[0] == '8' or number[0] == '7'):   
        number = f'+7 ({number[1:4]}) {number[4:7]}-{number[7:9]}-{number[9:]}' 
        return number
    else:
        return False 

line, phonebook= [', '.join(i.split(maxsplit=1)).split(', ') for i in iter(input, '.')], {}                         
for i in line:
    if len(i) > 1:                                           
        for j in range(1, len(i)):
            if GPhone(i[j]): 
                phonebook.setdefault(i[0], []).append(GPhone(i[j]))
    elif len(i) == 1:
        print(*phonebook.get(i[0], ["Не найдено"]), sep=', ')
