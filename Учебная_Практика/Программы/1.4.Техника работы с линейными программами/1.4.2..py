# Задание 2. Разработать программу с меню для демонстрации работы с типами данных:
# список(list), словарь(dict), множество(set)
# Меню -> выбор типа данных -> выбор метода -> краткая справка


list_menu = {
    'append': 'добавляет элемент в конец списка',
    'clear': 'удаляет все элементы из списка',
    'copy': 'возвращает копию списка',
    'count': 'возвращает количество элементов с заданным значением',
    'extend': 'добавить элементы списка (или любого итеративного) в конец текущего списка.',
    'index': 'возвращает индекс первого элемента с указанным значением',
    'insert': 'добавляет элемент в указанную позицию',
    'pop': 'удаляет элемент в указанном положении',
    'remove': 'удаляет первый элемент с указанным значением',
    'reverse':'меняет порядок списка',
    'sort': 'сортировка списка'
}

dict_menu = {
    'clear': 'удаляет все элементы из словаря',
    'copy': 'возвращает копию словаря',
    'fromkeys': 'возвращает словарь с указанными ключами и значением',
    'get': 'возвращает значение указанного ключа',
    'items': 'возвращает список, содержащий Кортеж для каждой пары ключ-значение',
    'keys': 'возвращает список, содержащий ключи словаря',
    'pop': 'удаляет элемент с указанным ключом',
    'popitem': 'удаляет последнюю вставленную пару ключ-значение',
    'setdefault': 'возвращает значение указанного ключа. Если ключ не существует: вставьте ключ с указанным значением',
    'update': 'обновляет словарь с помощью указанных пар ключ-значение',
    'values': 'возвращает список всех значений в словаре'
}

set_menu = {
    'add': 'добавляет элемент в набор',
    'clear': 'удаляет все элементы из набора',
    'copy': 'возвращает копию набора',
    'difference': 'возвращает набор, содержащий разницу между двумя или более наборами',
    'difference_update': 'удаляет элементы в этом наборе, которые также включены в другой, указанный набор',
    'discard': 'удалить указанный элемент',
    'intersection': 'возвращает набор, то есть пересечение двух других наборов',
    'intersection_update': 'удаляет элементы в этом наборе, которые отсутствуют в других, указанных наборах',
    'isdisjoint': 'возвращает, имеют ли два множества пересечение или нет',
    'issubset': 'возвращает, содержит ли другой набор этот набор или нет',
    'issuperset': 'возвращает, содержит ли этот набор другой набор или нет',
    'pop': 'удаляет элемент из набора',
    'remove': 'удаляет указанный элемент',
    'symmetric_difference': 'возвращает набор с симметричными разностями двух наборов',
    'symmetric_difference_update': 'вставляет симметричные разности из этого набора и другого',
    'union': 'возвращает набор, содержащий объединение множеств',
    'update': 'обновить набор с Союзом этот набор и другие'
}

type_menu = {'list': list_menu, 'dict': dict_menu, 'set': set_menu}

print('\n'.join(type_menu))
sel_type = input('> ')
if sel_type not in type_menu.keys():
    print('no such entry')
    exit(1)
print('\n'.join(type_menu[sel_type].keys()))

sel_method = input('> ')
if sel_method not in type_menu[sel_type].keys():
    print('no such entry')
    exit(1)
print(type_menu[sel_type][sel_method])
